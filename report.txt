CS660 Project Assignment 4 Report

######################################################################################################

Name1: [Hanlin Zou]
UID1: [U96634471]

Name2: [Chen Zifeng]
UID2: [U91314804]

######################################################################################################
=====================================================================================
1. Describe any design decisions you made. [Please refer to the lab website for detailed requirements here.]
Excercise 1-3: We followed the instructions on lab page.
Excercise 4: We use the helper methods and classes described above to assist in your implementation. Our implementation loop through subset sizes, subsets, and sub-plans of subsets, calling computeCostAndCardOfSubplan and building a PlanCache object that stores the minimal-cost way to perform each subset join.
=====================================================================================
2. Discuss and justify any changes you made to the API.
None
=====================================================================================
3. Describe any missing or incomplete elements of your code.
None
=====================================================================================
4. Describe how long you spent on the assignment, and whether there was anything you found particularly difficult or confusing.
We spent approximate 12 hours total on this project assignment.
We felt the join optimizer is the most difficult  part to implement in this assignment, especially orderJoins method.
=====================================================================================
5. If you collaborate with someone else, you have to discribe how you split the workload.
Zifeng Chen:
	TableStats.java
	estimateJoinCost
	estimateTableJoinCardinality
Hanlin Zou:
	IntHistogram.java
	orderJoins

=====================================================================================
######################################################################################################

